version: '2.1'

services:

  retail-rabbitmq:
    build:
      dockerfile: Dockerfile
      context: ./Retail.Queue
    ports:
      - '5672:5672'
      - '15672:15672'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 10s
      timeout: 100s
      retries: 20



  retail-frontend:
    build:
      dockerfile: Dockerfile
      context: ./Retail.Frontend
    ports:
      - '5000:80'



  retail-catalog:
    build:
      dockerfile: Dockerfile
      context: ./Retail.Catalog/Retail.Catalog.Web
    ports:
      - '5001:80'
    depends_on:
      retail-catalog-database:
        condition: service_healthy
    links:
      - retail-catalog-database

  retail-catalog-database:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=retail
      - POSTGRES_DB=catalog
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 100s
      retries: 20

  retail-catalog-frontend:
    build:
      dockerfile: Dockerfile
      context: ./Retail.Catalog.Frontend
    ports:
      - '6001:80'



  retail-sales:
    build:
      dockerfile: Dockerfile
      context: ./Retail.Sales/Retail.Sales
    ports:
      - '5002:80'
    depends_on:
      retail-rabbitmq:
        condition: service_healthy
    links: 
        - retail-rabbitmq
    stdin_open: true
    tty: true
    environment:
      - JAEGER_AGENT_HOST=retail-jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SAMPLER_TYPE=remote
      - JAEGER_SAMPLER_ENDPOINT=http://retail-jaeger:5778/sampling


  retail-sales-microfrontend:
    build:
      dockerfile: Dockerfile
      context: ./Retail.Sales.Microfrontend/
    ports:
      - '6002:80'



  retail-billing:
    build:
      dockerfile: Dockerfile
      context: ./Retail.Billing/Retail.Billing.Host
    depends_on:
      retail-rabbitmq:
        condition: service_healthy
    links: 
        - retail-rabbitmq
    stdin_open: true
    tty: true



  retail-shipping:
    build:
      dockerfile: Dockerfile
      context: ./Retail.Shipping/Retail.Shipping.Host
    depends_on:
      retail-rabbitmq:
        condition: service_healthy
      retail-mongo:
        condition: service_healthy
    links: 
        - retail-rabbitmq
        - retail-mongo
    stdin_open: true
    tty: true

  retail-mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: retail
      MONGO_INITDB_ROOT_PASSWORD: retail
    healthcheck:
      test: ["CMD","mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 100s
      retries: 10

  retail-mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 7081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: retail
      ME_CONFIG_MONGODB_ADMINPASSWORD: retail
      ME_CONFIG_MONGODB_URL: mongodb://retail:retail@retail-mongo:27017/
    depends_on:
      retail-mongo:
        condition: service_healthy
    links:
        - retail-mongo



  retail-recommendations:
    build:
      dockerfile: Dockerfile
      context: ./Retail.Recommendations/Retail.Recommendations.Service
    depends_on:
      retail-rabbitmq:
        condition: service_healthy
    links: 
        - retail-rabbitmq
        - retail-recommendations-database
    stdin_open: true
    tty: true

  retail-recommendations-database:
    build:
      dockerfile: Dockerfile
      context: ./Retail.Recommendations.Database
    ports:
      - '7474:7474'
      - '7687:7687'
    environment: 
      - NEO4J_AUTH=none



  retail-auth:
    build:
      dockerfile: Dockerfile
      context: ./Retail.Auth/IdentityServer
    ports:
      - '7001:80'
    depends_on:
      retail-rabbitmq:
        condition: service_healthy
    links: 
        - retail-rabbitmq
    stdin_open: true
    tty: true



  retail-elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    ports:
      - '9200:9200'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 100s
      retries: 20
    mem_limit: 2g

  retail-kibana:
    image: docker.elastic.co/kibana/kibana:7.11.0
    environment:
      - ELASTICSEARCH_HOSTS=http://retail-elastic:9200
    depends_on:
      retail-elastic:
        condition: service_healthy
    links:
        - retail-elastic
    ports:
      - '5601:5601'
    mem_limit: 1g



  retail-jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
